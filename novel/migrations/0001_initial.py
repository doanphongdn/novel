# Generated by Django 3.1.6 on 2021-02-23 21:47

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import novel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_cms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'novel_authors',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, max_length=250, null=True, populate_from='name', slugify=novel.models.unicode_slugify, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'novel_genres',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=250, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, max_length=250, null=True, populate_from='name', slugify=novel.models.unicode_slugify, unique=True)),
                ('thumbnail_image', models.TextField(blank=True, null=True)),
                ('descriptions', models.TextField(blank=True, null=True)),
                ('novel_updated', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('publish', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hot_novel', models.BooleanField(default=False)),
                ('follow', models.IntegerField(default=0)),
                ('vote', models.FloatField(default=5)),
                ('vote_total', models.IntegerField(default=1)),
                ('view_daily', models.IntegerField(default=0)),
                ('view_monthly', models.IntegerField(default=0)),
                ('view_total', models.IntegerField(default=0)),
                ('latest_updated_time', models.DateTimeField(auto_now_add=True)),
                ('src_url', models.TextField(unique=True)),
                ('src_latest_chapter_url', models.CharField(blank=True, max_length=250, null=True)),
                ('src_campaign', models.CharField(max_length=50)),
                ('attempt', models.SmallIntegerField(default=0)),
                ('authors', models.ManyToManyField(blank=True, db_table='novel_novel_authors_rel', to='novel.Author')),
                ('genres', models.ManyToManyField(blank=True, db_table='novel_novel_genres_rel', to='novel.Genre')),
            ],
            options={
                'db_table': 'novel_novels',
            },
        ),
        migrations.CreateModel(
            name='NovelFlat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_chapter', models.JSONField(blank=True, default=novel.models.default_novel_flat, null=True)),
                ('first_chapter', models.JSONField(blank=True, default=novel.models.default_novel_flat, null=True)),
                ('chapters', models.JSONField(blank=True, default=novel.models.default_novel_flat, null=True)),
            ],
            options={
                'db_table': 'novel_novels_flat',
            },
        ),
        migrations.CreateModel(
            name='NovelSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='images')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='images')),
                ('meta_keywords', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('meta_copyright', models.TextField(blank=True, null=True)),
                ('meta_author', models.TextField(blank=True, null=True)),
                ('meta_og_type', models.CharField(blank=True, max_length=250, null=True)),
                ('meta_img', models.ImageField(blank=True, null=True, upload_to='images')),
                ('meta_og_description', models.TextField(blank=True, null=True)),
                ('meta_fb_app_id', models.CharField(blank=True, max_length=250)),
                ('img_ignoring', models.TextField(blank=True, null=True)),
                ('google_analystics_id', models.TextField(blank=True, null=True)),
                ('novel_type', models.CharField(choices=[('COMIC', 'Comic'), ('TEXT', 'Text')], max_length=250)),
            ],
            options={
                'db_table': 'novel_settings',
            },
        ),
        migrations.CreateModel(
            name='NovelUserProfile',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('avatar', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'novel_user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'novel_status',
            },
        ),
        migrations.CreateModel(
            name='NovelChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('novel_slug', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, max_length=250, null=True, populate_from='name', slugify=novel.models.unicode_slugify)),
                ('view_total', models.IntegerField(default=0, null=True)),
                ('chapter_updated', models.BooleanField(default=False)),
                ('binary_content', models.BinaryField(blank=True, null=True)),
                ('images_content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('src_url', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('attempt', models.SmallIntegerField(default=0)),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
            ],
            options={
                'db_table': 'novel_chapters',
                'ordering': ['id'],
                'unique_together': {('slug', 'novel'), ('name', 'novel'), ('src_url', 'novel')},
            },
        ),
        migrations.AddField(
            model_name='novel',
            name='novel_flat',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='novel.novelflat'),
        ),
        migrations.AddField(
            model_name='novel',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='novel.status'),
        ),
        migrations.CreateModel(
            name='CrawlNovelRetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_processing', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='novel.novelchapter')),
                ('novel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
            ],
            options={
                'db_table': 'crawl_novel_retry',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(null=True)),
                ('reply_id', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=250)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='novel.novelchapter')),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'novel_comments',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_point', models.SmallIntegerField(default=0)),
                ('comic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'novel_ratings',
                'unique_together': {('user', 'comic')},
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novelchapter')),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'novel_histories',
                'unique_together': {('user', 'novel')},
            },
        ),
        migrations.CreateModel(
            name='CDNNovelFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=250)),
                ('hash_origin_url', models.CharField(db_index=True, max_length=250)),
                ('url', models.TextField(blank=True, null=True)),
                ('url_hash', models.TextField(blank=True, null=True)),
                ('retry', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full', models.BooleanField(default=False)),
                ('allow_limit', models.BooleanField(default=False)),
                ('cdn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_cms.cdnserver')),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='novel.novelchapter')),
            ],
            options={
                'db_table': 'cdn_novel_files',
                'unique_together': {('cdn', 'hash_origin_url')},
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='novel.novel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'novel_bookmarks',
                'unique_together': {('user', 'novel')},
            },
        ),
    ]
